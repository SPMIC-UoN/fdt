#!/bin/sh

Usage() {
    echo ""
    echo "Usage: bedpost <subject directory> "
    echo ""
    echo "expects to find bvals and bvecs in subject directory"
    echo "expects to find data nodif_brain_mask nodif in subject directory"
    echo ""
    exit
}

trap Clean_Exit 2


Clean_Exit(){
    
    if [ -d ${subjdir}.bedpost/logs/pid_${$} ];then
	i=`ls  ${subjdir}.bedpost/logs/pid_${$}`
	for j in ${i};do 
	    host=`echo $j | awk --field-separator=_fdt_ '{print $1}'`
	    pid=`echo $j | awk --field-separator=_fdt_ '{print $2}'`
	    ${FSL_REMOTE_CALL} $host "kill -KILL $pid" #this leaves one child process per processor - what can you do?
	done
    fi
    
    ExitUnlock;
}

Lock(){
    if [ x${FSL_LOCK_DIR} != "x" ];then
	touch ${FSL_LOCK_DIR}/.bedpost.lock
    fi
}

ExitUnlock(){
    if [ -e ${FSL_LOCK_DIR}/.bedpost.lock ];then
	rm ${FSL_LOCK_DIR}/.bedpost.lock
    fi
    exit
}

LockTest(){
    if [ x${FSL_LOCK_DIR} = "x" ];then
	echo 1;
    elif [ ! -e ${FSL_LOCK_DIR}/.bedpost.lock ];then
	echo 1;
    else
	echo 0;
    fi
}

make_absolute(){
    dir=$1;
    if [ -d ${dir} ]; then
	OLDWD=`pwd`
	cd ${dir}
	dir_all=`pwd`
	cd $OLDWD
    else
	dir_all=${dir}
    fi
    echo ${dir_all}
}



[ "$1" = "" ] && Usage

if [ `LockTest` -eq 0 ]; then
    echo "bedpost is currently being run - try again later"
    exit
fi

Lock();

subjdir=`make_absolute $1`
subjdir=`echo $subjdir | sed 's/\/$/$/g'`

echo subjectdir is $subjdir

#check that all required files exist

if [ ! -d $subjdir ]; then
	echo "subject directory $1 not found"
	ExitUnlock
fi

if [ ! -e ${subjdir}/bvecs ]; then
	echo "${subjdir}/bvecs not found"
	ExitUnlock
fi

if [ ! -e ${subjdir}/bvals ]; then
	echo "${subjdir}/bvals not found"
	ExitUnlock
fi

if [ `${FSLDIR}/bin/imtest ${subjdir}/data` -eq 0 ]; then
	echo "${subjdir}/data not found"
	ExitUnlock
fi

if [ `${FSLDIR}/bin/imtest ${subjdir}/nodif` -eq 0 ]; then
	echo "${subjdir}/nodif not found"
	ExitUnlock
fi

if [ `${FSLDIR}/bin/imtest ${subjdir}/nodif_brain_mask` -eq 0 ]; then
	echo "${subjdir}/nodif_brain_mask not found"
	ExitUnlock
fi


echo making bedpost directory
mkdir -p ${subjdir}.bedpost/
mkdir -p ${subjdir}.bedpost/diff_slices

echo copying files to bedpost directory
cp ${subjdir}/bvecs ${subjdir}/bvals ${subjdir}.bedpost
${FSLDIR}/bin/imcp ${subjdir}/nodif ${subjdir}/nodif_brain_mask ${subjdir}.bedpost



mkdir -p ${subjdir}.bedpost/logs
mkdir -p ${subjdir}.bedpost/logs/pid_${$}

nslices=`avwval ${subjdir}/data dim3`

#${FSLDIR}/bin/avwslice ${subjdir}/data
#${FSLDIR}/bin/avwslice ${subjdir}/nodif_brain_mask

#following need to be setup elsewhere
#FSL_MACHINE_LIST="cayenne0 cayenne0 cayenne2 cayenne3"
#FSL_REMOTE_CALL="ssh"

if [ "$FSL_MACHINE_LIST" = "" ] ; then
    ${FSLDIR}/bin/bedpost_proc $subjdir $nslices
else
    for machine in $FSL_MACHINE_LIST; do
	$FSL_REMOTE_CALL $machine  "if [ -r /etc/fslconf/fsl.sh ];then . /etc/fslconf/fsl.sh; elif [ -r /usr/local/etc/fslconf/fsl.sh ];then . /usr/local/etc/fslconf/fsl.sh; elif [ -r \${HOME}/.fslconf/fsl.sh ]; then . \${HOME}/.fslconf/fsl.sh; fi; if [ x\${FSLDIR} != "x" ];then \${FSLDIR}/bin/bedpost_proc $subjdir $nslices ${subjdir}.bedpost/logs/pid_${$}; else echo FSLDIR not set in any default location on machine `hostname`;fi"  &
    done
fi


finished=0;
while [ $finished -eq 0 ];do
    sleep 60;
    nfin=`ls ${subjdir}.bedpost/logs/.*_finished |wc -w` #fix this (see Bedpost)
    if [ $nfin -eq $nslices ];then
	finished=1;
    fi
done

#postprocessing
#postprocess $subjdir

mkdir -p ${subjdir}.bedpost/xfms
xfmdir=${subjdir}.bedpost/xfms
echo 1 0 0 0 > ${xfmdir}/eye.mat
echo 0 1 0 0 >> ${xfmdir}/eye.mat
echo 0 0 1 0 >> ${xfmdir}/eye.mat
echo 0 0 0 1 >> ${xfmdir}/eye.mat

echo "DONE"

ExitUnlock()





